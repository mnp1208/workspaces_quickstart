AWSTemplateFormatVersion: "2010-09-09"
Description: WorkSpaces POC networking infrastructure
Parameters:
  VPCName:
    Description: Name of the VPC
    Type: String
  VPCCidr:
    Description: CidrBlock of the VPC
    Type: String
  PublicSubnet1Cidr:
    Description: CidrBlock of the public subnet 1
    Type: String
  PublicSubnet2Cidr:
    Description: CidrBlock of the public subnet 2
    Type: String
  PrivateSubnet3Cidr:
    Description: CidrBlock of the public subnet 3
    Type: String
  PrivateSubnet4Cidr:
    Description: CidrBlock of the public subnet 4
    Type: String
Resources:
  #Create the VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsSupport: False
      EnableDnsHostnames: False
      Tags:
        - Key: "Name"
          Value: !Ref VPCName
        - Key: "creator"
          Value: "CloudFormation"
  #Create Public Subnet 1          
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref PublicSubnet1Cidr
      MapPublicIpOnLaunch: True
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: !Join
            - ''
            - - !Ref VPCName
              - " - Public Subnet 1"          
        - Key: "creator"
          Value: "CloudFormation"
  #Create Public Subnet 2
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref PublicSubnet2Cidr
      MapPublicIpOnLaunch: True
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: !Join
            - ''
            - - !Ref VPCName
              - " - Public Subnet 2"
        - Key: "creator"
          Value: "CloudFormation"
  #Create Private Subnet 3
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref PrivateSubnet3Cidr
      MapPublicIpOnLaunch: False
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: !Join
            - ''
            - - !Ref VPCName
              - " - Private Subnet 3"
        - Key: "creator"
          Value: "CloudFormation"
  #Create Private Subnet 4
  PrivateSubnet4:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref PrivateSubnet4Cidr
      MapPublicIpOnLaunch: False
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: !Join
            - ''
            - - !Ref VPCName
              - " - Private Subnet 4"
        - Key: "creator"
          Value: "CloudFormation"
  #Create Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: "Name"
          Value: !Join
            - ''
            - - !Ref VPCName
              - " IGW"
        - Key: "creator"
          Value: "CloudFormation"
  #Attach the Internet Gateway to the VPC
  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  #Create Public RouteTable
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: "Name"
          Value: !Join
            - ''
            - - !Ref VPCName
              - " Public Route Table"
  #Create Private RouteTable
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: "Name"
          Value: !Join
            - ''
            - - !Ref VPCName
              - " Private Route Table"
  #Add Route to IGW in the Public RouteTable
  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  #Associate Public SubNet 1 to Public RouteTable
  PublicSubnet1ARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      RouteTableId:
        Ref: PublicRouteTable
  #Associate Public SubNet 2 to Public RouteTable
  PublicSubnet2ARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      RouteTableId:
        Ref: PublicRouteTable
  #Associate Private SubNet 3 to Private RouteTable
  PrivateSubnet3ARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet3
      RouteTableId:
        Ref: PrivateRouteTable
  #Associate Private SubNet 4 to Private RouteTable
  PrivateSubnet4ARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet4
      RouteTableId:
        Ref: PrivateRouteTable
 